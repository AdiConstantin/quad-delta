services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: quad-mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=StrongPassword!123
      - MSSQL_PID=Developer
    ports: ["1433:1433"]
    volumes:
      - ./db/mssql/init:/docker-entrypoint-initdb.d
  
  postgres:
    image: postgres:16
    container_name: quad-postgres
    environment:
      - POSTGRES_USER=demo
      - POSTGRES_PASSWORD=demo
      - POSTGRES_DB=appdb
    command: ["postgres","-c","wal_level=logical"]
    ports: ["5432:5432"]
    volumes:
      - ./db/postgres/init:/docker-entrypoint-initdb.d

  dotnet-api:
    build:
      context: ./services/dotnet-api
      dockerfile: Dockerfile
    container_name: quad-dotnet-api
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - DB_CONN=Server=mssql;Database=appdb;User Id=sa;Password=StrongPassword!123;TrustServerCertificate=True;
    ports: ["5001:8080"]
    depends_on:
      - mssql
  
  node-api:
    build:
      context: ./services/node-api
      dockerfile: Dockerfile
    container_name: quad-node-api
    environment:
      - PORT=8080
      - PGHOST=postgres
      - PGPORT=5432
      - PGDATABASE=appdb
      - PGUSER=demo
      - PGPASSWORD=demo
    ports: ["5002:8080"]
    depends_on:
      - postgres
      
  angular-app:
    build:
      context: ./apps/angular-app
      dockerfile: Dockerfile
    container_name: quad-angular
    ports: ["9876:80"]
    depends_on:
      - dotnet-api

